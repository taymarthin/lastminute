/*
 * This C++ source file was generated by the Gradle 'init' task.
 */

#include <iostream>
#include <stdlib.h>
#include "taxes-library.h"
#include "shoppingitem.h"

void printInputItem(ShoppingItem item)
{
    if (item.getImported())
    {
        std::cout << item.getNumberOfItems()
                  << " imported "
                  << item.getDescription()
                  << " at "
                  << item.getBasicPrice()
                  << "\n";
    }
    else
    {
        std::cout << item.getNumberOfItems()
                  << " "
                  << item.getDescription()
                  << " at "
                  << item.getBasicPrice()
                  << "\n";
    }
}

void printOutputItem(ShoppingItem item)
{
    if (item.getImported())
    {
        std::cout << item.getNumberOfItems()
                  << " imported "
                  << item.getDescription()
                  << ": "
                  << item.getTotalAmount()
                  << "\n";
    }
    else
    {
        std::cout << item.getNumberOfItems()
                  << " "
                  << item.getDescription()
                  << ": "
                  << item.getTotalAmount()
                  << "\n";
    }
}

void printTestInput(std::vector<ShoppingItem> listItems, std::string testName )
{
    std::cout << "Input " << testName << ":" << "\n";

    for(unsigned int i=0; i < listItems.size(); i++){
       printInputItem(listItems[i]);
    }

    std::cout << "\n";
}

void ext_executeTest(std::vector<ShoppingItem> listItems, std::string testName )
{
    printTestInput(listItems,testName);

    double totalAmountTicket = 0.0;
    double salesTaxes = 0.0;
    std::cout << "Output " << testName << ":" << "\n";

    for(unsigned int i=0; i < listItems.size(); i++){
       totalAmountTicket += listItems[i].getTotalAmount();
       salesTaxes += listItems[i].getAmountTaxes();
       printOutputItem(listItems[i]);
    }

    std::cout << "Sales Taxes: " << salesTaxes << "\n";
    std::cout << "Total Amount: " << totalAmountTicket << "\n\n";
}
